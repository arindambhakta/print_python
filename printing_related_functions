import sys
import print_colours as pcol


def print_a_line(line_to_print, end=''):
    sys.stdout.write(line_to_print + end)
    sys.stdout.flush()
    return


def print_error(error_to_print, end=''):
    sys.stdout.write(pcol.PrintColors.ERROR + "ERROR: " + error_to_print + end + pcol.PrintColors.ENDC + "\n")
    sys.stdout.flush()
    return


def print_warning(warning_to_print, end=''):
    sys.stdout.write(pcol.PrintColors.WARNING + "WARNING: " + warning_to_print + end + pcol.PrintColors.ENDC + "\n")
    sys.stdout.flush()
    return


def print_a_boxed_header(string_to_print, box_border='-'):
    str_len = len(string_to_print)
    top_and_bottom_borders = box_border * (str_len + 4)
    box_content = f"| {string_to_print} |"

    print_a_line(top_and_bottom_borders, end='\n')
    print_a_line(box_content, end='\n')
    print_a_line(top_and_bottom_borders, end='\n')
    return


def print_a_small_header(string_to_print, bottom_border='-'):
    str_len = len(string_to_print)
    print_a_line(string_to_print, end='\n')
    print_a_line(bottom_border * str_len, end='\n')
    return


def print_a_separator_line(separator_char='-', line_length=80):
    print_a_line(separator_char * line_length, end='\n')
    return


if __name__ == '__main__':
    msg = "test message"
    print_a_boxed_header(msg, box_border='-')
    print_a_small_header(msg, bottom_border='-')



